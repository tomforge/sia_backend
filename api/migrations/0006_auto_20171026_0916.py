# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-26 09:16
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.hashers import make_password

from django.utils import timezone as tz
import datetime


def populate(apps, schema_editor):

    User = apps.get_model("auth", "User")
    Profile = apps.get_model("api", "Profile")
    u1, c = User.objects.get_or_create(username='12', password=make_password('Passw0rd1'), first_name='John', last_name='Phua')
    p1, c = Profile.objects.get_or_create(user=u1, user_type=0)
    u2, c = User.objects.get_or_create(username='11', password=make_password('Passw0rd1'), first_name='Guo Wei', last_name='Foo')
    p2, c = Profile.objects.get_or_create(user=u2, user_type=1)
    u3, c = User.objects.get_or_create(username='1234', password=make_password('Passw0rd1'), first_name='Yu Jia', last_name='Tay')
    p3, c = Profile.objects.get_or_create(user=u3, user_type=2)
    u4, c = User.objects.get_or_create(username='12345', password=make_password('Passw0rd1'), first_name='Shao Hui', last_name='Ng')
    p4, c = Profile.objects.get_or_create(user=u4, user_type=2)
    u5, c = User.objects.get_or_create(username='123456', password=make_password('Passw0rd1'), first_name='Adam', last_name='Chew')
    p5, c = Profile.objects.get_or_create(user=u5, user_type=2)

    # Token = apps.get_model("rest_framework.authtoken", "Token")
    # for user in User.objects.all():
    #     Token.objects.get_or_create(user=user)

    Aircraft = apps.get_model("api", "Aircraft")
    dtETA = tz.make_aware(datetime.datetime(2017, 10, 22, 16, 01, 12, 123))
    dtETD = tz.make_aware(datetime.datetime(2017, 10, 22, 23, 55, 12, 123))
    a1, c = Aircraft.objects.get_or_create(regn='SWT', acType='77W', inbound='238', outbound='237', ETA=dtETA, ETD=dtETD, bay='A13/A13/C20')
    dtETA = tz.make_aware(datetime.datetime(2017, 10, 22, 04, 32, 12, 123))
    dtETD = tz.make_aware(datetime.datetime(2017, 10, 22, 13, 55, 12, 123))
    a2, c = Aircraft.objects.get_or_create(regn='SWS', acType='77W', inbound='635', outbound='634', ETA=dtETA, ETD=dtETD, bay='A10/A11/A11')
    dtETA = tz.make_aware(datetime.datetime(2017, 10, 22, 19, 34, 12, 123))
    dtETD = tz.make_aware(datetime.datetime(2017, 10, 23, 02, 25, 12, 123))
    a3, c = Aircraft.objects.get_or_create(regn='SWO', acType='77WR', inbound='831', outbound='008', ETA=dtETA, ETD=dtETD, bay='F60/-/A5')
    dtETA = tz.make_aware(datetime.datetime(2017, 10, 22, 05, 53, 12, 123))
    dtETD = tz.make_aware(datetime.datetime(2017, 10, 22, 12, 35, 12, 123))
    a4, c = Aircraft.objects.get_or_create(regn='SWN', acType='77WR', inbound='801', outbound='318', ETA=dtETA, ETD=dtETD, bay='B9/-/B9')
    dtETA = tz.make_aware(datetime.datetime(2017, 10, 21, 06, 11, 12, 123))
    dtETD = tz.make_aware(datetime.datetime(2017, 10, 22, 13, 05, 12, 123))
    a5, c = Aircraft.objects.get_or_create(regn='SWM', acType='77WR', inbound='351', outbound='866', ETA=dtETA, ETD=dtETD, bay='A5/A13/A13')

    Spare = apps.get_model("api", "Spare")
    s1, c = Spare.objects.get_or_create(partID='XYZ123', name='Chair', stock=200)
    s2, c = Spare.objects.get_or_create(partID='ABC456', name='Backrest', stock=20)
    s3, c = Spare.objects.get_or_create(partID='QWERTY', name='Emergency exit light', stock=10)
    s4, c = Spare.objects.get_or_create(partID='TFYJ54', name='Table', stock=500)

    Defect = apps.get_model("api", "Defect")
    SpareDetail = apps.get_model("api", "SpareDetail")
    d1, c = Defect.objects.get_or_create(plane=a1, header="SEAT 24D legrest inop", classCode='premium', category='seats')
    SpareDetail.objects.get_or_create(spare=s1, defect=d1)
    d2, c = Defect.objects.get_or_create(plane=a2, header="Exit A light inop", classCode='premium', category='galley')
    SpareDetail.objects.get_or_create(spare=s3, defect=d2)
    d3, c = Defect.objects.get_or_create(plane=a3, header="LAVATORY 11 SINK NIL HOT WATER", classCode='premium', category='lavatory')
    d4, c = Defect.objects.get_or_create(plane=a4, header="SEAT 24D legrest inop", classCode='economy', category='seats')
    SpareDetail.objects.get_or_create(spare=s1, defect=d4)
    d5, c = Defect.objects.get_or_create(plane=a5, header="GALLEY COMPARTMENT 21 PEN MARKS", classCode='economy', category='galley')
    d6, c = Defect.objects.get_or_create(plane=a4, header="LAVATORY 33 UNABLE TO LATCH", classCode='economy', category='lavatory')
    d7, c = Defect.objects.get_or_create(plane=a3, header="SEAT 20A legrest inop", classCode='business', category='seats')
    SpareDetail.objects.get_or_create(spare=s1, defect=d7)
    d8, c = Defect.objects.get_or_create(plane=a2, header="GALLEY COMPARTMENT BROKE", classCode='business', category='galley')
    d9, c = Defect.objects.get_or_create(plane=a1, header="LAVATORY 10 SMOKE SENSOR INOP", classCode='business', category='lavatory')
    d10, c = Defect.objects.get_or_create(plane=a2, header="SEAT 1A INOP", classCode='first', category='seats')
    SpareDetail.objects.get_or_create(spare=s1, defect=d10)
    d10.techsAssigned.add(p4)
    d10.techsAssigned.add(p5)
    Update = apps.get_model("api", "Update")
    Update.objects.get_or_create(defect=d10, author=p4, details="Additional items required to make seat serviceable")

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_auto_20171026_0554'),
    ]

    operations = [
        migrations.RunPython(populate),
    ]
